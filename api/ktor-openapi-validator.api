public final class io/github/lexadiky/ktor/openapivalidator/OpenApiValidatorConfig {
	public static final field Companion Lio/github/lexadiky/ktor/openapivalidator/OpenApiValidatorConfig$Companion;
	public fun <init> ()V
	public final fun atlassian (Lkotlin/jvm/functions/Function1;)V
	public final fun getReporter ()Lio/github/lexadiky/ktor/openapivalidator/reporter/ErrorReporter;
	public final fun getSpecification ()Ljava/lang/String;
	public final fun getSpecificationUrl ()Ljava/lang/String;
	public final fun setReporter (Lio/github/lexadiky/ktor/openapivalidator/reporter/ErrorReporter;)V
	public final fun setSpecification (Ljava/lang/String;)V
	public final fun setSpecificationUrl (Ljava/lang/String;)V
	public final fun whitelist (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
}

public final class io/github/lexadiky/ktor/openapivalidator/OpenApiValidatorConfig$Companion {
	public final fun getCONFIG_TYPE_MESSAGE ()Lkotlin/jvm/functions/Function0;
}

public abstract interface annotation class io/github/lexadiky/ktor/openapivalidator/OpenApiValidatorDelicateApi : java/lang/annotation/Annotation {
}

public final class io/github/lexadiky/ktor/openapivalidator/OpenApiValidatorKt {
	public static final fun getOpenApiValidator ()Lio/ktor/client/plugins/api/ClientPlugin;
}

public final class io/github/lexadiky/ktor/openapivalidator/RuleMatchContext {
	public fun <init> (Lio/github/lexadiky/ktor/openapivalidator/RuleMatcher$Operation;Lio/github/lexadiky/ktor/openapivalidator/RuleMatcher$Request;Lio/github/lexadiky/ktor/openapivalidator/RuleMatcher$Response;)V
	public final fun component1 ()Lio/github/lexadiky/ktor/openapivalidator/RuleMatcher$Operation;
	public final fun component2 ()Lio/github/lexadiky/ktor/openapivalidator/RuleMatcher$Request;
	public final fun component3 ()Lio/github/lexadiky/ktor/openapivalidator/RuleMatcher$Response;
	public final fun copy (Lio/github/lexadiky/ktor/openapivalidator/RuleMatcher$Operation;Lio/github/lexadiky/ktor/openapivalidator/RuleMatcher$Request;Lio/github/lexadiky/ktor/openapivalidator/RuleMatcher$Response;)Lio/github/lexadiky/ktor/openapivalidator/RuleMatchContext;
	public static synthetic fun copy$default (Lio/github/lexadiky/ktor/openapivalidator/RuleMatchContext;Lio/github/lexadiky/ktor/openapivalidator/RuleMatcher$Operation;Lio/github/lexadiky/ktor/openapivalidator/RuleMatcher$Request;Lio/github/lexadiky/ktor/openapivalidator/RuleMatcher$Response;ILjava/lang/Object;)Lio/github/lexadiky/ktor/openapivalidator/RuleMatchContext;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getOperation ()Lio/github/lexadiky/ktor/openapivalidator/RuleMatcher$Operation;
	public final fun getRequest ()Lio/github/lexadiky/ktor/openapivalidator/RuleMatcher$Request;
	public final fun getResponse ()Lio/github/lexadiky/ktor/openapivalidator/RuleMatcher$Response;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/github/lexadiky/ktor/openapivalidator/RuleMatcher {
	public static final field Companion Lio/github/lexadiky/ktor/openapivalidator/RuleMatcher$Companion;
	public abstract fun match (Lio/github/lexadiky/ktor/openapivalidator/RuleMatcher$Operation;Lio/github/lexadiky/ktor/openapivalidator/RuleMatcher$Request;Lio/github/lexadiky/ktor/openapivalidator/RuleMatcher$Response;)Z
}

public final class io/github/lexadiky/ktor/openapivalidator/RuleMatcher$Companion {
	public final fun from (Lkotlin/jvm/functions/Function1;)Lio/github/lexadiky/ktor/openapivalidator/RuleMatcher;
}

public final class io/github/lexadiky/ktor/openapivalidator/RuleMatcher$Operation {
	public fun <init> (Ljava/lang/String;)V
	public final fun getId ()Ljava/lang/String;
}

public final class io/github/lexadiky/ktor/openapivalidator/RuleMatcher$Request {
	public fun <init> (Lio/ktor/http/HttpMethod;Ljava/lang/String;Lio/ktor/http/Headers;Lio/ktor/http/Parameters;Ljava/lang/String;)V
	public final fun getBody ()Ljava/lang/String;
	public final fun getHeaders ()Lio/ktor/http/Headers;
	public final fun getMethod ()Lio/ktor/http/HttpMethod;
	public final fun getParameters ()Lio/ktor/http/Parameters;
	public final fun getPath ()Ljava/lang/String;
}

public final class io/github/lexadiky/ktor/openapivalidator/RuleMatcher$Response {
	public fun <init> (Lio/ktor/http/HttpStatusCode;Ljava/lang/String;)V
	public final fun getBody ()Ljava/lang/String;
	public final fun getCode ()Lio/ktor/http/HttpStatusCode;
}

public abstract interface class io/github/lexadiky/ktor/openapivalidator/reporter/ErrorReporter {
	public abstract fun report (Lcom/atlassian/oai/validator/report/ValidationReport;)V
}

public final class io/github/lexadiky/ktor/openapivalidator/reporter/Junit5ErrorReporter : io/github/lexadiky/ktor/openapivalidator/reporter/ErrorReporter {
	public fun <init> ()V
	public fun report (Lcom/atlassian/oai/validator/report/ValidationReport;)V
}

public abstract class io/github/lexadiky/ktor/openapivalidator/reporter/TextErrorReporter : io/github/lexadiky/ktor/openapivalidator/reporter/ErrorReporter {
	public static final field Companion Lio/github/lexadiky/ktor/openapivalidator/reporter/TextErrorReporter$Companion;
	public fun <init> ()V
	public final fun report (Lcom/atlassian/oai/validator/report/ValidationReport;)V
	public abstract fun report (Ljava/util/List;)V
}

public final class io/github/lexadiky/ktor/openapivalidator/reporter/TextErrorReporter$Companion {
	public final fun invoke (Lkotlin/jvm/functions/Function1;)Lio/github/lexadiky/ktor/openapivalidator/reporter/ErrorReporter;
}

